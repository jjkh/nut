const std = @import("std");

const version = std.SemanticVersion.parse(
    @import("build.zig.zon").version,
) catch unreachable;

pub fn build(b: *std.Build) !void {
    const upstream = b.dependency("nut", .{});
    const target = b.standardTargetOptions(.{});
    const optimize = b.standardOptimizeOption(.{});

    const common_dir = upstream.path("common");
    const include_dir = upstream.path("include");
    const drivers_dir = upstream.path("drivers");

    const libusb_dep = b.dependency("libusb", .{
        .target = target,
        .optimize = optimize,
        .@"system-libudev" = false,
    });

    const usbhid = b.createModule(.{
        .target = target,
        .optimize = optimize,
        .link_libc = true,
    });

    usbhid.addIncludePath(generateNutVersionHeader(b).getDirectory());

    const config_header = createConfigHeaderStep(
        b,
        include_dir.path(b, "config.h.in"),
        target.result,
    );
    usbhid.addIncludePath(config_header.getOutputDir());

    usbhid.addIncludePath(include_dir);
    usbhid.addIncludePath(common_dir);
    usbhid.addCSourceFiles(.{
        .root = drivers_dir,
        .files = usbhid_driver_files,
    });
    usbhid.addCSourceFiles(.{
        .root = common_dir,
        .files = common_src_files,
    });

    usbhid.linkLibrary(libusb_dep.artifact("usb"));

    if (target.result.os.tag == .windows) {
        buildAndLinkLibRegex(b, usbhid);
        usbhid.linkSystemLibrary("Ws2_32", .{});
    }

    const usbhid_exe = b.addExecutable(.{
        .name = "usbhid-ups",
        .root_module = usbhid,
    });
    b.installArtifact(usbhid_exe);
}

fn buildAndLinkLibRegex(b: *std.Build, mod: *std.Build.Module) void {
    if (b.lazyDependency("mingw-regex", .{})) |regex_dep| {
        const regex_mod = b.createModule(.{
            .target = mod.resolved_target,
            .optimize = mod.optimize,
            .link_libc = true,
        });
        regex_mod.addIncludePath(regex_dep.path(""));
        regex_mod.addCSourceFiles(.{
            .root = regex_dep.path(""),
            .files = &.{
                "regex.c",
            },
        });
        const regex_lib = b.addLibrary(.{
            .name = "mingw-regex",
            .root_module = regex_mod,
        });
        regex_lib.installHeader(regex_dep.path("regex.h"), "regex.h");

        mod.linkLibrary(regex_lib);
    }
}

fn createConfigHeaderStep(
    b: *std.Build,
    input_file: std.Build.LazyPath,
    target: std.Target,
) *std.Build.Step.ConfigHeader {
    const is_windows = target.os.tag == .windows;
    const opts = .{
        // default paths (guessing, win32 only)
        .CONFPATH = "./etc",
        .STATEPATH = "./var/state/ups",
        .PIDPATH = "./var/state/ups",
        .LIBDIR = "./lib",

        // target-dependent options,,
        .HAVE_SETENV = defFromBool(!is_windows),
        .HAVE_LOCALTIME_R = defFromBool(!is_windows),
        .HAVE_DECL_LOCALTIME_R = defFromBool(!is_windows),
        .HAVE_LOCALTIME_S = defFromBool(!is_windows),
        .HAVE_DECL_LOCALTIME_S = defFromBool(!is_windows),
        .HAVE_STRPTIME = defFromBool(!is_windows),
        .HAVE_WINDOWS_H = defFromBool(is_windows),
        .HAVE_WINSOCK2_H = defFromBool(is_windows),
        .HAVE_WS2TCPIP_H = defFromBool(is_windows),
        .WINDOWS_SOCKETS = defFromBool(is_windows),

        // load bearing defines
        .HAVE_GMTIME_R = 1,
        .HAVE_DECL_GMTIME_R = 1,
        .HAVE_GMTIME_S = 1,
        .HAVE_DECL_GMTIME_S = 1,
        .HAVE_DECL_ROUND = 1,
        .HAVE_FLOAT_H = 1,
        .HAVE_REGEX_H = 1,
        .HAVE_LIBREGEX = 1,
        .HAVE_INTTYPES_H = 1,

        // required but unimportant defines
        .CC_VERSION = "clang version 20.1.2 (https://github.com/ziglang/zig-bootstrap de424301411b3a34a8a908d8dca01a1d29f2c6df)",
        .CONFIG_FLAGS = "",

        // others (don't know what most of these even do)
        // have enabled the ones that "seem" obvious and portable
        // some may be necessary for some platforms
        .ABS_TOP_BUILDDIR = null,
        .ABS_TOP_SRCDIR = null,
        .AC_APPLE_UNIVERSAL_BUILD = null,
        .ALTPIDPATH = null,
        .AUTOTOOLS_BUILD_ALIAS = null,
        .AUTOTOOLS_BUILD_SHORT_ALIAS = null,
        .AUTOTOOLS_HOST_ALIAS = null,
        .AUTOTOOLS_HOST_SHORT_ALIAS = null,
        .AUTOTOOLS_TARGET_ALIAS = null,
        .AUTOTOOLS_TARGET_SHORT_ALIAS = null,
        .BINDIR = null,
        .CCACHE_NAMESPACE = null,
        .CGIPATH = null,
        .CPP_VERSION = null,
        .CPU_TYPE = null,
        .CXX_NO_MINUS_C_MINUS_O = null,
        .CXX_VERSION = null,
        .DRVPATH = null,
        .FLEXIBLE_ARRAY_MEMBER = null,
        .FOUND_BOOLEAN_IMPLEM_STR = null,
        .FOUND_BOOLEAN_TYPE = null,
        .FOUND_BOOLEAN_VALUE_FALSE = null,
        .FOUND_BOOLEAN_VALUE_TRUE = null,
        .FOUND_BOOL_IMPLEM_STR = null,
        .FOUND_BOOL_TYPE = null,
        .FOUND_BOOL_T_IMPLEM_STR = null,
        .FOUND_BOOL_T_TYPE = null,
        .FOUND_BOOL_T_VALUE_FALSE = null,
        .FOUND_BOOL_T_VALUE_TRUE = null,
        .FOUND_BOOL_VALUE_FALSE = null,
        .FOUND_BOOL_VALUE_TRUE = null,
        .FOUND__BOOL_IMPLEM_STR = null,
        .FOUND__BOOL_TYPE = null,
        .FOUND__BOOL_VALUE_FALSE = null,
        .FOUND__BOOL_VALUE_TRUE = null,
        .GETNAMEINFO_TYPE_ARG1 = null,
        .GETNAMEINFO_TYPE_ARG2 = null,
        .GETNAMEINFO_TYPE_ARG46 = null,
        .GETNAMEINFO_TYPE_ARG7 = null,
        .HAVE_ABS = 1,
        .HAVE_ABS_VAL = null,
        .HAVE_ATEXIT = null,
        .HAVE_AVAHI_CLIENT_CLIENT_H = null,
        .HAVE_AVAHI_CLIENT_NEW = null,
        .HAVE_AVAHI_COMMON_MALLOC_H = null,
        .HAVE_AVAHI_FREE = null,
        .HAVE_BOOLEAN_IMPLEM_ENUM = null,
        .HAVE_BOOLEAN_IMPLEM_INT = null,
        .HAVE_BOOLEAN_IMPLEM_MACRO = null,
        .HAVE_BOOLEAN_TYPE_CAMELCASE = null,
        .HAVE_BOOLEAN_TYPE_LOWERCASE = null,
        .HAVE_BOOLEAN_TYPE_UPPERCASE = null,
        .HAVE_BOOLEAN_VALUE_CAMELCASE = null,
        .HAVE_BOOLEAN_VALUE_LOWERCASE = null,
        .HAVE_BOOLEAN_VALUE_UPPERCASE = null,
        .HAVE_BOOL_IMPLEM_ENUM = null,
        .HAVE_BOOL_IMPLEM_INT = null,
        .HAVE_BOOL_IMPLEM_MACRO = null,
        .HAVE_BOOL_TYPE_CAMELCASE = null,
        .HAVE_BOOL_TYPE_LOWERCASE = null,
        .HAVE_BOOL_TYPE_UPPERCASE = null,
        .HAVE_BOOL_T_IMPLEM_ENUM = null,
        .HAVE_BOOL_T_IMPLEM_INT = null,
        .HAVE_BOOL_T_IMPLEM_MACRO = null,
        .HAVE_BOOL_T_TYPE_CAMELCASE = null,
        .HAVE_BOOL_T_TYPE_LOWERCASE = null,
        .HAVE_BOOL_T_TYPE_UPPERCASE = null,
        .HAVE_BOOL_T_VALUE_CAMELCASE = null,
        .HAVE_BOOL_T_VALUE_LOWERCASE = null,
        .HAVE_BOOL_T_VALUE_UPPERCASE = null,
        .HAVE_BOOL_VALUE_CAMELCASE = null,
        .HAVE_BOOL_VALUE_LOWERCASE = null,
        .HAVE_BOOL_VALUE_UPPERCASE = null,
        .HAVE_CFSETISPEED = null,
        .HAVE_CLOCK_GETTIME = 1,
        .HAVE_CLOCK_MONOTONIC = 1,
        .HAVE_CPPUNIT = null,
        .HAVE_CSTDBOOL = 1,
        .HAVE_CXX11 = 1,
        .HAVE_C_VARARRAYS = null,
        .HAVE_DECL_FABS = 1,
        .HAVE_DECL_FABSF = 1,
        .HAVE_DECL_FABSL = 1,
        .HAVE_DECL_I2C_SMBUS_ACCESS = null,
        .HAVE_DECL_I2C_SMBUS_READ_BLOCK_DATA = null,
        .HAVE_DECL_I2C_SMBUS_READ_BYTE_DATA = null,
        .HAVE_DECL_I2C_SMBUS_READ_WORD_DATA = null,
        .HAVE_DECL_I2C_SMBUS_WRITE_BYTE_DATA = null,
        .HAVE_DECL_I2C_SMBUS_WRITE_WORD_DATA = null,
        .HAVE_DECL_LOG_UPTO = null,
        .HAVE_DECL_OPTIND = null,
        .HAVE_DECL_POW10 = 1,
        .HAVE_DECL_REALPATH = null,
        .HAVE_DECL_REGCOMP = null,
        .HAVE_DECL_REGEXEC = null,
        .HAVE_DECL_TIMEGM = 1,
        .HAVE_DECL_UU_LOCK = null,
        .HAVE_DECL__MKGMTIME = null,
        .HAVE_DECL___FUNCTION__ = null,
        .HAVE_DECL___FUNC__ = null,
        .HAVE_DLFCN_H = null,
        .HAVE_DUP = null,
        .HAVE_DUP2 = null,
        .HAVE_FCNTL_H = null,
        .HAVE_FCVT = null,
        .HAVE_FCVTL = null,
        .HAVE_FILENO = null,
        .HAVE_FLOCK = null,
        .HAVE_FREEIPMI = null,
        .HAVE_FREEIPMI_11X_12X = null,
        .HAVE_FREEIPMI_FREEIPMI_H = null,
        .HAVE_FREEIPMI_MONITORING = null,
        .HAVE_GDFONTMB_H = null,
        .HAVE_GD_H = null,
        .HAVE_GETADAPTERSADDRESSES = null,
        .HAVE_GETADAPTERSINFO = null,
        .HAVE_GETIFADDRS = null,
        .HAVE_GETOPT_H = null,
        .HAVE_GETOPT_LONG = null,
        .HAVE_GETPASSPHRASE = null,
        .HAVE_GPIOD_CHIP_CLOSE = null,
        .HAVE_GPIOD_CHIP_OPEN = null,
        .HAVE_GPIOD_CHIP_OPEN_BY_NAME = null,
        .HAVE_GPIOD_H = null,
        .HAVE_IFADDRS_H = null,
        .HAVE_INET_NTOP = 1,
        .HAVE_INET_PTON = 1,
        .HAVE_INIT_SNMP = null,
        .HAVE_INTMAX_T = null,
        .HAVE_IPHLPAPI_H = null,
        .HAVE_IPMI_MONITORING_H = null,
        .HAVE_LIBGD = null,
        .HAVE_LIBLTDL = null,
        .HAVE_LIBPOWERMAN_H = null,
        .HAVE_LIBUSB_DETACH_KERNEL_DRIVER = null,
        .HAVE_LIBUSB_DETACH_KERNEL_DRIVER_NP = null,
        .HAVE_LIBUSB_GET_PORT_NUMBER = null,
        .HAVE_LIBUSB_H = 1,
        .HAVE_LIBUSB_INIT = 1,
        .HAVE_LIBUSB_KERNEL_DRIVER_ACTIVE = null,
        .HAVE_LIBUSB_SET_AUTO_DETACH_KERNEL_DRIVER = null,
        .HAVE_LIBUSB_STRERROR = null,
        .HAVE_LIB_BSD_KVM_PROC = null,
        .HAVE_LIB_ILLUMOS_PROC = null,
        .HAVE_LIMITS_H = 1,
        .HAVE_LINUX_I2C_DEV_H = null,
        .HAVE_LINUX_SERIAL_H = null,
        .HAVE_LINUX_SMBUS_H = null,
        .HAVE_LOCKF = null,
        .HAVE_LONG_DOUBLE = null,
        .HAVE_LONG_LONG_INT = null,
        .HAVE_LTDL_H = null,
        .HAVE_LUSB0_USB_H = null,
        .HAVE_MATH_H = 1,
        .HAVE_MEMORY_H = null,
        .HAVE_MODBUS_H = null,
        .HAVE_MODBUS_NEW_RTU = null,
        .HAVE_MODBUS_NEW_RTU_USB = null,
        .HAVE_MODBUS_NEW_TCP = null,
        .HAVE_MODBUS_SET_BYTE_TIMEOUT = null,
        .HAVE_MODBUS_SET_RESPONSE_TIMEOUT = null,
        .HAVE_NETDB_H = null,
        .HAVE_NETINET_IN_H = null,
        .HAVE_NET_IF_H = null,
        .HAVE_NET_SNMP_NET_SNMP_CONFIG_H = null,
        .HAVE_NET_SNMP_NET_SNMP_INCLUDES_H = null,
        .HAVE_NE_SET_CONNECT_TIMEOUT = null,
        .HAVE_NE_SOCK_CONNECT_TIMEOUT = null,
        .HAVE_NE_XMLREQ_H = null,
        .HAVE_NE_XML_DISPATCH_REQUEST = null,
        .HAVE_NSS_H = null,
        .HAVE_NSS_INIT = null,
        .HAVE_ON_EXIT = null,
        .HAVE_OPENSSL_SSL_H = null,
        .HAVE_PM_CONNECT = null,
        .HAVE_POLL_H = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT_BESIDEFUNC = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_FORMAT_NONLITERAL = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_FORMAT_NONLITERAL_BESIDEFUNC = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_FORMAT_TRUNCATION = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_FORMAT_TRUNCATION_BESIDEFUNC = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE = null,
        .HAVE_PRAGMAS_FOR_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_BESIDEFUNC = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS_BESIDEFUNC = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN_BESIDEFUNC = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_PUSH_POP = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_PUSH_POP_BESIDEFUNC = null,
        .HAVE_PRAGMA_CLANG_DIAGNOSTIC_PUSH_POP_INSIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ADDRESS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ADDRESS_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ARRAY_BOUNDS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ARRAY_BOUNDS_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ASSIGN_ENUM_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_ALIGN = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_ALIGN_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_FUNCTION_TYPE_STRICT = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CAST_FUNCTION_TYPE_STRICT_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_COVERED_SWITCH_DEFAULT_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT_PEDANTIC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_CXX98_COMPAT_PEDANTIC_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_DEPRECATED_DECLARATIONS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_DEPRECATED_DYNAMIC_EXCEPTION_SPEC_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXIT_TIME_DESTRUCTORS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXIT_TIME_DESTRUCTORS_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXTRA_SEMI_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXTRA_SEMI_STMT = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_EXTRA_SEMI_STMT_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_NONLITERAL = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_NONLITERAL_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_OVERFLOW = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_OVERFLOW_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_SECURITY = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_SECURITY_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_TRUNCATION = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_FORMAT_TRUNCATION_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_GLOBAL_CONSTRUCTORS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_GLOBAL_CONSTRUCTORS_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_MAYBE_UNINITIALIZED = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_MAYBE_UNINITIALIZED_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_OLD_STYLE_CAST_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_PEDANTIC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_PEDANTIC_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SIGN_COMPARE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SIGN_COMPARE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SIGN_CONVERSION = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SIGN_CONVERSION_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRICT_PROTOTYPES_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRINGOP_TRUNCATION = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_STRINGOP_TRUNCATION_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SUGGEST_DESTRUCTOR_OVERRIDE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_SUGGEST_OVERRIDE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_COMPARE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_COMPARE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_CONSTANT_OUT_OF_RANGE_COMPARE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_CONSTANT_OUT_OF_RANGE_COMPARE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_TYPE_LIMIT_COMPARE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_TYPE_LIMIT_COMPARE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_UNSIGNED_ZERO_COMPARE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TAUTOLOGICAL_UNSIGNED_ZERO_COMPARE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_TYPE_LIMITS_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_BREAK = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_BREAK_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNREACHABLE_CODE_RETURN_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNUSED_FUNCTION = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_UNUSED_PARAMETER = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_WEAK_VTABLES_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_IGNORED_ZERO_AS_NULL_POINTER_CONSTANT_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_PUSH_POP = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_PUSH_POP_BESIDEFUNC = null,
        .HAVE_PRAGMA_GCC_DIAGNOSTIC_PUSH_POP_INSIDEFUNC = null,
        .HAVE_PTHREAD = null,
        .HAVE_PTHREAD_TRYJOIN = null,
        .HAVE_READLINK = null,
        .HAVE_SD_BOOTED = null,
        .HAVE_SD_BUS_CALL_METHOD = null,
        .HAVE_SD_BUS_DEFAULT_SYSTEM = null,
        .HAVE_SD_BUS_ERROR_FREE = null,
        .HAVE_SD_BUS_FLUSH_CLOSE_UNREF = null,
        .HAVE_SD_BUS_GET_PROPERTY_TRIVIAL = null,
        .HAVE_SD_BUS_MESSAGE_READ_BASIC = null,
        .HAVE_SD_BUS_MESSAGE_UNREF = null,
        .HAVE_SD_BUS_OPEN_SYSTEM = null,
        .HAVE_SD_BUS_OPEN_SYSTEM_WITH_DESCRIPTION = null,
        .HAVE_SD_BUS_SET_DESCRIPTION = null,
        .HAVE_SD_NOTIFY = null,
        .HAVE_SD_NOTIFY_BARRIER = null,
        .HAVE_SD_WATCHDOG_ENABLED = null,
        .HAVE_SEMAPHORE_H = 1,
        .HAVE_SEMAPHORE_NAMED = 1,
        .HAVE_SEMAPHORE_UNNAMED = 1,
        .HAVE_SETEUID = 1,
        .HAVE_SETLOGMASK = 1,
        .HAVE_SETSID = 1,
        .HAVE_SIGACTION = 1,
        .HAVE_SIGEMPTYSET = 1,
        .HAVE_SIGNAL_H = 1,
        .HAVE_SNPRINTF = 1,
        .HAVE_SSL_CTX_NEW = null,
        .HAVE_SSL_H = 1,
        .HAVE_STDARG_H = 1,
        .HAVE_STDBOOL_H = 1,
        .HAVE_STDINT_H = 1,
        .HAVE_STDLIB_H = 1,
        .HAVE_STRCASECMP = 1,
        .HAVE_STRCASESTR = 1,
        .HAVE_STRDUP = 1,
        .HAVE_STRERROR = 1,
        .HAVE_STRINGS_H = 1,
        .HAVE_STRING_H = 1,
        .HAVE_STRLWR = 1,
        .HAVE_STRNCASECMP = 1,
        .HAVE_STRNLEN = 1,
        .HAVE_STRSEP = 1,
        .HAVE_STRSTR = 1,
        .HAVE_STRTOF = 1,
        .HAVE_STRTOK_R = 1,
        .HAVE_STRUCT_POLLFD = null,
        .HAVE_SUSECONDS_T = null,
        .HAVE_SYSTEMD = null,
        .HAVE_SYSTEMD_SD_BUS_H = null,
        .HAVE_SYSTEMD_SD_DAEMON_H = null,
        .HAVE_SYS_MODEM_H = null,
        .HAVE_SYS_RESOURCE_H = null,
        .HAVE_SYS_SELECT_H = null,
        .HAVE_SYS_SIGNAL_H = null,
        .HAVE_SYS_SOCKET_H = null,
        .HAVE_SYS_STAT_H = null,
        .HAVE_SYS_TERMIOS_H = null,
        .HAVE_SYS_TIME_H = 1,
        .HAVE_SYS_TYPES_H = 1,
        .HAVE_TCPD_H = null,
        .HAVE_TCSENDBREAK = null,
        .HAVE_TERMIOS_H = null,
        .HAVE_TIMEGM = 1,
        .HAVE_TIME_H = 1,
        .HAVE_UINTMAX_T = 1,
        .HAVE_UNISTD_H = 1,
        .HAVE_UNSETENV = 1,
        .HAVE_UNSIGNED_LONG_LONG_INT = null,
        .HAVE_USB_DETACH_KERNEL_DRIVER_NP = null,
        .HAVE_USB_H = null,
        .HAVE_USB_INIT = null,
        .HAVE_USECONDS_T = null,
        .HAVE_USLEEP = 1,
        .HAVE_UU_LOCK = null,
        .HAVE_VARARGS_H = 1,
        .HAVE_VSNPRINTF = 1,
        .HAVE_WRAP = null,
        .HAVE__BOOL_IMPLEM_ENUM = null,
        .HAVE__BOOL_IMPLEM_INT = null,
        .HAVE__BOOL_IMPLEM_MACRO = null,
        .HAVE__BOOL_TYPE_CAMELCASE = null,
        .HAVE__BOOL_TYPE_LOWERCASE = null,
        .HAVE__BOOL_TYPE_UPPERCASE = null,
        .HAVE__BOOL_VALUE_CAMELCASE = null,
        .HAVE__BOOL_VALUE_LOWERCASE = null,
        .HAVE__BOOL_VALUE_UPPERCASE = null,
        .HAVE__MKGMTIME = null,
        .HAVE___ATTRIBUTE__ = null,
        .HAVE___ATTRIBUTE__NORETURN = null,
        .HAVE___ATTRIBUTE__UNUSED_ARG = null,
        .HAVE___ATTRIBUTE__UNUSED_FUNC = null,
        .HTMLPATH = null,
        .LIBEXECDIR = null,
        .LOG_FACILITY = .LOG_DAEMON,
        .LT_OBJDIR = null,
        .MAN_SECTION_API = null,
        .MAN_SECTION_API_BASE = null,
        .MAN_SECTION_CFG = null,
        .MAN_SECTION_CFG_BASE = null,
        .MAN_SECTION_CMD_SYS = null,
        .MAN_SECTION_CMD_SYS_BASE = null,
        .MAN_SECTION_CMD_USR = null,
        .MAN_SECTION_CMD_USR_BASE = null,
        .MULTIARCH_TARGET_ALIAS = null,
        .NEED_GETOPT_DECLS = null,
        .NEED_GETOPT_H = null,
        .NUT_DATADIR = null,
        .NUT_HAVE_LIBNETSNMP_DRAFT_BLUMENTHAL_AES_04 = null,
        .NUT_HAVE_LIBNETSNMP_usmAES128PrivProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmAES192PrivProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmAES256PrivProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmAESPrivProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmDESPrivProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmHMAC192SHA256AuthProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmHMAC256SHA384AuthProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmHMAC384SHA512AuthProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmHMACMD5AuthProtocol = null,
        .NUT_HAVE_LIBNETSNMP_usmHMACSHA1AuthProtocol = null,
        .NUT_MANDIR = null,
        .NUT_MODBUS_HAS_USB = null,
        .NUT_MODBUS_LINKTYPE_STR = null,
        .NUT_MODBUS_TIMEOUT_ARG_sec_usec_uint32 = null,
        .NUT_MODBUS_TIMEOUT_ARG_sec_usec_uint32_cast_timeval_fields = null,
        .NUT_MODBUS_TIMEOUT_ARG_timeval = null,
        .NUT_MODBUS_TIMEOUT_ARG_timeval_numeric_fields = null,
        .NUT_NETVERSION = null,
        .NUT_WEBSITE_BASE = "https://networkupstools.org/docs",
        .PACKAGE = null,
        .PACKAGE_BUGREPORT = null,
        .PACKAGE_NAME = null,
        .PACKAGE_STRING = null,
        .PACKAGE_TARNAME = null,
        .PACKAGE_URL = null,
        .PACKAGE_VERSION = null,
        .PORT = null,
        .PREFIX = null,
        .REQUIRE_NUT_STRARG = null,
        .RUN_AS_GROUP = "nobody",
        .RUN_AS_USER = "nobody",
        .SBINDIR = null,
        .SIZEOF_VOID_P = null,
        .SOFILE_LIBAVAHI = null,
        .SOFILE_LIBFREEIPMI = null,
        .SOFILE_LIBNEON = null,
        .SOFILE_LIBNETSNMP = null,
        .SOFILE_LIBUSB0 = null,
        .SOFILE_LIBUSB1 = null,
        .SOPATH_LIBAVAHI = null,
        .SOPATH_LIBFREEIPMI = null,
        .SOPATH_LIBNEON = null,
        .SOPATH_LIBNETSNMP = null,
        .SOPATH_LIBUSB0 = null,
        .SOPATH_LIBUSB1 = null,
        .STDC_HEADERS = null,
        .SUN_LIBUSB = null,
        .TIME_WITH_SYS_TIME = 1,
        .TREE_VERSION = null,
        ._ALL_SOURCE = null,
        ._GNU_SOURCE = null,
        ._POSIX_PTHREAD_SEMANTICS = null,
        ._TANDEM_SOURCE = null,
        .__EXTENSIONS__ = null,
        .VERSION = null,
        .WANT_TIMEGM_FALLBACK = null,
        .WITH_ASCIIDOC = null,
        .WITH_AVAHI = null,
        .WITH_CGI = null,
        .WITH_DEV = null,
        .WITH_DEV_LIBNUTCONF = null,
        .WITH_DOCS = null,
        .WITH_FREEIPMI = null,
        .WITH_GPIO = null,
        .WITH_IPMI = null,
        .WITH_LIBGPIO_VERSION = null,
        .WITH_LIBGPIO_VERSION_STR = null,
        .WITH_LIBLTDL = null,
        .WITH_LIBPOWERMAN = null,
        .WITH_LIBSYSTEMD = null,
        .WITH_LIBSYSTEMD_INHIBITOR = null,
        .WITH_LIBUSB_0_1 = null,
        .WITH_LIBUSB_1_0 = 1,
        .WITH_LINUX_I2C = null,
        .WITH_MACOSX = null,
        .WITH_MODBUS = null,
        .WITH_NEON = null,
        .WITH_NSS = null,
        .WITH_NUTCONF = null,
        .WITH_NUT_MONITOR = null,
        .WITH_NUT_SCANNER = null,
        .WITH_OPENSSL = null,
        .WITH_PYNUT = null,
        .WITH_SERIAL = null,
        .WITH_SNMP = null,
        .WITH_SNMP_STATIC = null,
        .WITH_SOLARIS_SMF = null,
        .WITH_SSL = null,
        .WITH_UNMAPPED_DATA_POINTS = null,
        .WITH_USB = 1,
        .WITH_USB_BUSPORT = null,
        .WITH_WRAP = null,
        .WORDS_BIGENDIAN = null,
        ._MINIX = null,
        ._POSIX_1_SOURCE = null,
        ._POSIX_SOURCE = null,
        ._UINT32_T = null,
        ._UINT64_T = null,
        ._UINT8_T = null,
        .__func__ = null,
        .@"inline" = null,
        .int16_t = null,
        .int32_t = null,
        .int64_t = null,
        .int8_t = null,
        .intmax_t = null,
        .size_t = null,
        .socklen_t = null,
        .ssize_t = null,
        .uint16_t = null,
        .uint32_t = null,
        .uint64_t = null,
        .uint8_t = null,
        .uintmax_t = null,
    };

    return b.addConfigHeader(
        .{ .style = .{ .autoconf_undef = input_file } },
        opts,
    );
}

fn defFromBool(val: bool) ?u1 {
    return if (val) 1 else null;
}

fn generateNutVersionHeader(b: *std.Build) *std.Build.Step.WriteFile {
    var buf: [200]u8 = undefined;
    const data = std.fmt.bufPrint(
        &buf,
        \\#define NUT_VERSION_MACRO "{f}"
        \\#define NUT_VERSION_SEMVER_MACRO "{f}"
        \\#define NUT_VERSION_IS_RELEASE 1
        \\#define NUT_VERSION_IS_PRERELEASE 0
    ,
        .{ version, version },
    ) catch unreachable;
    return b.addWriteFile("nut_version.h", data);
}

const usbhid_driver_files: []const []const u8 = &.{
    "apc-hid.c",
    "arduino-hid.c",
    "belkin-hid.c",
    "cps-hid.c",
    "explore-hid.c",
    "liebert-hid.c",
    "mge-hid.c",
    "powercom-hid.c",
    "tripplite-hid.c",
    "idowell-hid.c",
    "openups-hid.c",
    "powervar-hid.c",
    "delta_ups-hid.c",
    "ecoflow-hid.c",
    "ever-hid.c",
    "legrand-hid.c",
    "salicru-hid.c",
    "usbhid-ups.c",

    "dstate.c",
    "upsdrvquery.c",
    "libhid.c",
    "libusb1.c",
    "hidparser.c",
    "usb-common.c",

    "main.c",
};

const common_src_files: []const []const u8 = &.{
    "common.c",
    "parseconf.c",
    "upsconf.c",
    "state.c",
    "str.c",
    "setenv.c",
    "wincompat.c",
};
